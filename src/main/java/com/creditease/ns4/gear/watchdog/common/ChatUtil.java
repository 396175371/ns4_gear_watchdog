package com.creditease.ns4.gear.watchdog.common;import com.creditease.ns4.gear.watchdog.common.chatbot.entry.BotMessage;import com.creditease.ns4.gear.watchdog.common.chatbot.utils.ChatBotUtil;import com.creditease.ns4.gear.watchdog.common.chatbot.utils.ChatConstants;import com.creditease.ns.log.NsLog;import com.creditease.ns4.gear.watchdog.common.chatbot.entry.BotMessage;import com.creditease.ns4.gear.watchdog.common.chatbot.utils.ChatBotUtil;import com.creditease.ns4.gear.watchdog.common.factory.ThreadPoolManager;import com.creditease.ns4.gear.watchdog.common.log.NsLogger;import java.nio.charset.StandardCharsets;import java.util.UUID;import java.util.concurrent.ExecutorService;import java.util.concurrent.TimeUnit;/** * @author 杨红岩 * @description 微信通知 * @date 2019/3/5 */public class ChatUtil {    private static final NsLog logger = NsLogger.getWatchdogLogger();    private static ExecutorService namedAsynSendFactoryPool = null;    static {        try {            namedAsynSendFactoryPool = ThreadPoolManager.getInstance().newExecutorService("send-chat-pool-%d", 1, 2, 50L, TimeUnit.MILLISECONDS, 10);        } catch (Exception e) {            logger.error("创建异步发微信消息线程池错误：{}", e.getMessage());        }    }    /**     * 发送消息     *     * @param content 内容     */    public static void send(String content) {        send(content, true);    }    /**     * 发送消息     *     * @param content 内容     */    public static void send(final String content, boolean isAsyn) {        if (isAsyn) {            if (namedAsynSendFactoryPool.isShutdown()) {                return;            }            namedAsynSendFactoryPool.execute(new Runnable() {                @Override                public void run() {                    sendChat(content);                }            });        } else {            sendChat(content);        }    }    private static void sendChat(String content) {        BotMessage message = new BotMessage();        message.setWxGroupName(PropertiesUtil.getValue("chatbot.WxGroup"));        message.setQqGroupId("861222459");        message.setHtml(content);        message.setMsg(PropertiesUtil.getValue("chatbot.msg"));        message.setUser(PropertiesUtil.getValue("chatbot.user"));        message.setRemark(PropertiesUtil.getValue("chatbot.remark"));        message.setType(ChatConstants.CHATBOT_WX);        message.setMsgId(UUID.randomUUID().toString());        String response = ChatBotUtil.send(message);        logger.info("微信通知发送结果：{}", new String(response.getBytes(StandardCharsets.UTF_8)));    }    public static void shutdown() {        logger.info("停止异步发送微信线程池");        namedAsynSendFactoryPool.shutdown();    }}