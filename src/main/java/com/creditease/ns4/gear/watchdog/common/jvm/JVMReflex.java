package com.creditease.ns4.gear.watchdog.common.jvm;import com.creditease.ns.log.NsLog;import com.creditease.ns4.gear.watchdog.common.log.NsLogger;import java.io.File;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;/** * @author 杨红岩 * @description Jvm反射 * @date 2019/3/5 */public class JVMReflex {    private static final NsLog logger = NsLogger.getWatchdogLogger();    //VM    private ClassLoader JVMToolClassloader = null;    private Class<?> virtualMachine;    private Method methodAttachToVM;    private Method methodDetachFromVM;    private Method methodGetAgentProperties;    private Method methodGetSystemProperties;    private Method methodLoadAgent;    private Method methodStartLocalManagementAgent;    private static JVMReflex jvmReflex = null;    public static JVMReflex newInstance() {        if (jvmReflex == null) {            jvmReflex = new JVMReflex();            String javaHome = System.getProperty("java.home");            String javaVersion = System.getProperty("java.version");            try {                jvmReflex.JVMToolClassloader = new URLClassLoader(new URL[]{                        new File(javaHome + File.separator + ".." + File.separator + "lib" + File.separator + "tools.jar").toURI().toURL()                });                jvmReflex.virtualMachine = jvmReflex.JVMToolClassloader.loadClass("com.sun.tools.attach.VirtualMachine");                jvmReflex.methodAttachToVM = jvmReflex.virtualMachine.getMethod("attach", String.class);                jvmReflex.methodDetachFromVM = jvmReflex.virtualMachine.getMethod("detach");                jvmReflex.methodGetAgentProperties = jvmReflex.virtualMachine.getMethod("getAgentProperties", (Class[]) null);                jvmReflex.methodGetSystemProperties = jvmReflex.virtualMachine.getMethod("getSystemProperties", (Class[]) null);                jvmReflex.methodLoadAgent = jvmReflex.virtualMachine.getMethod("loadAgent", String.class, String.class);                if (null != javaVersion && javaVersion.startsWith("9.")) {                    jvmReflex.methodStartLocalManagementAgent = jvmReflex.virtualMachine.getMethod("startLocalManagementAgent", (Class[]) null);                }            } catch (Exception e) {                logger.error("初始化获取JVM工具异常：{} {}", e.getMessage(), e);            }        }        return jvmReflex;    }    public ClassLoader getJVMToolClassloader() {        return JVMToolClassloader;    }    public Class<?> getVirtualMachine() {        return virtualMachine;    }    public Method getMethodAttachToVM() {        return methodAttachToVM;    }    public Method getMethodDetachFromVM() {        return methodDetachFromVM;    }    public Method getMethodGetAgentProperties() {        return methodGetAgentProperties;    }    public Method getMethodGetSystemProperties() {        return methodGetSystemProperties;    }    public Method getMethodLoadAgent() {        return methodLoadAgent;    }    public Method getMethodStartLocalManagementAgent() {        return methodStartLocalManagementAgent;    }}